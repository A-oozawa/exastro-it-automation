version: '3.7'
services:
  ita-api-organization:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_api_organization/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - LISTEN_PORT=8000
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DEFAULT_LANGUAGE=ja
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    networks:
      - exastro
      - default

  ita-api-admin:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_api_admin/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - LISTEN_PORT=8079
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DEFAULT_LANGUAGE=ja
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - GITLAB_PROTOCOL=${GITLAB_PROTOCOL:-http}
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_PORT=${GITLAB_PORT}
      - GITLAB_ROOT_TOKEN=${GITLAB_ROOT_TOKEN}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    networks:
      - exastro
      - default

  ita-web-server:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_web_server/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - LISTEN_PORT=80
    ports:
      - "0.0.0.0:80:80"
    networks:
      - exastro
      - default

  ita-mariadb:
    image: mariadb:10.4.8
    healthcheck:
      test: (mysqladmin ping --silent -u root -p$${MYSQL_ROOT_PASSWORD} && mysql -u root -p$${MYSQL_ROOT_PASSWORD} -e 'select 1;') || exit 1
      interval: 3s
      retries: 200
    volumes:
      - ../.volumes/ita-mariadb/data:/var/lib/mysql
      - ../ita_root/ita_mariadb/conf/custom.cnf:/etc/mysql/conf.d/custom.cnf
    environment:
      - TZ=Asia/Tokyo
      - MYSQL_ROOT_PASSWORD=password
      # - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      # - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      # - MARIADB_DATABASE=${MARIADB_DATABASE}
      # - MARIADB_USER=${MARIADB_USER}
      # - MARIADB_PASSWORD=${MARIADB_PASSWORD}
    ports:
      - "0.0.0.0:3306:3306"
    networks:
      - exastro
      - default

  ita-by-ansible-execute:
    user: 1000:${HOST_DOCKER_GID:-1000}
    build:
      dockerfile: ./ita_root/ita_by_ansible_execute/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - HOST_STORAGEPATH=${HOST_STORAGEPATH}
      - CONTAINER_BASE=${CONTAINER_BASE}
      - GITLAB_PROTOCOL=${GITLAB_PROTOCOL:-http}
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_PORT=${GITLAB_PORT}
      - GITLAB_ROOT_TOKEN=${GITLAB_ROOT_TOKEN}
      - ANSIBLE_AGENT_IMAGE=${ANSIBLE_AGENT_IMAGE}
      - ANSIBLE_AGENT_IMAGE_TAG=${ANSIBLE_AGENT_IMAGE_TAG}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-ansible-execute
    networks:
      - exastro
      - default

  ita-by-ansible-legacy-role-vars-listup:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_ansible_legacy_role_vars_listup/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-ansible-legacy-role-vars-listup
    networks:
      - exastro
      - default

  ita-by-ansible-legacy-vars-listup:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_ansible_legacy_vars_listup/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-ansible-legacy-vars-listup
    networks:
      - exastro
      - default

  ita-by-ansible-pioneer-vars-listup:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_ansible_pioneer_vars_listup/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-ansible-pioneer-vars-listup
    networks:
      - exastro
      - default

  ita-by-ansible-towermaster-sync:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_ansible_towermaster_sync/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-ansible-towermaster-sync
    networks:
      - exastro
      - default

  ita-by-collector:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_collector/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-collector
    networks:
      - exastro
      - default

  ita-by-conductor-synchronize:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_conductor_synchronize/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-conductor-synchronize
    networks:
      - exastro
      - default

  ita-by-conductor-regularly:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_conductor_regularly/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-conductor-regularly
    networks:
      - exastro
      - default

  ita-by-menu-create:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_menu_create/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-menu-create
    networks:
      - exastro
      - default

  ita-by-menu-export-import:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_menu_export_import/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-menu-export-import
    networks:
      - exastro
      - default

  ita-by-excel-export-import:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_excel_export_import/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-excel-export-import
    networks:
      - exastro
      - default

  ita-by-terraform-cloud-ep-execute:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_terraform_cloud_ep_execute/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-terraform-cloud-ep-execute
    networks:
      - exastro
      - default

  ita-by-terraform-cloud-ep-vars-listup:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_terraform_cloud_ep_vars_listup/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-terraform-cloud-ep-vars-listup
    networks:
      - exastro
      - default

  ita-by-terraform-cli-execute:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_terraform_cli_execute/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-terraform-cli-execute
    networks:
      - exastro
      - default

  ita-by-terraform-cli-vars-listup:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_terraform_cli_vars_listup/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-terraform-cli-vars-listup
    networks:
      - exastro
      - default

  ita-by-hostgroup-split:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_hostgroup_split/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-hostgroup-split
    networks:
      - exastro
      - default

  ita-by-cicd-for-iac:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_cicd_for_iac/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-cicd-for-iac
    networks:
      - exastro
      - default

  ita-by-execinstance-dataautoclean:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_execinstance_dataautoclean/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-execinstance-dataautoclean
    networks:
      - exastro
      - default

  ita-by-file-autoclean:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_by_file_autoclean/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
    profiles:
      - exastro-it-automation-backyard
      - ita-by-file-autoclean
    networks:
      - exastro
      - default

  ita-migration:
    user: 1000:1000
    build:
      dockerfile: ./ita_root/ita_migration/Dockerfile
      context: ../.
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${HTTPS_PROXY}
    command: python3 /exastro/migration_main.py
    environment:
      - TZ=Asia/Tokyo
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_USER=${DB_ADMIN_USER}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
      - PLATFORM_API_HOST=platform-api
      - PLATFORM_API_PORT=8000
      - SYSTEM_ANSIBLE_EXECUTION_LIMIT=${SYSTEM_ANSIBLE_EXECUTION_LIMIT}
      - SYSTEM_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION=${SYSTEM_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION}
      - ORG_ANSIBLE_EXECUTION_LIMIT_DEFAULT=${ORG_ANSIBLE_EXECUTION_LIMIT_DEFAULT}
      - ORG_ANSIBLE_EXECUTION_LIMIT_MAX=${ORG_ANSIBLE_EXECUTION_LIMIT_MAX}
      - ORG_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION=${ORG_ANSIBLE_EXECUTION_LIMIT_DESCRIPTION}
    depends_on:
      ita-mariadb:
        condition: service_healthy
      platform-migration-2:
        condition: service_completed_successfully
    networks:
      - exastro
      - default

networks:
  exastro:
    name: "exastro_${NETWORK_ID}"
